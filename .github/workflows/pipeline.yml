name: CI/CD Pipeline (Demo App)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: cd app && npm install

      - name: Run Linting
        run: npm run lint || echo "No linting configured"

      - name: Run Tests
        run: npm test || echo "No tests specified"

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-test-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t demo-app:latest .
          docker tag demo-app:latest icsimonna/manual:latest
          docker push icsimonna/manual

#  deploy-simulation:
#    runs-on: ubuntu-latest
#    needs: docker-build
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Install Minikube and kubectl (to simulate ECS deployment)
#        run: |
#          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
#          sudo mv minikube /usr/local/bin/
#          sudo chmod +x /usr/local/bin/minikube
#          curl -LO "https://dl.k8s.io/release/v1.25.0/bin/linux/amd64/kubectl"
#          sudo mv kubectl /usr/local/bin/
#          sudo chmod +x /usr/local/bin/kubectl
#          minikube start --driver=docker
#
#      - name: Deploy to Minikube (simulating ECS)
#        run: |
#          kubectl apply -f deployment.yaml
#          kubectl rollout status deployment/demo-app
#
#      - name: Post deployment test
#        run: |
#          kubectl get pods
#          kubectl port-forward svc/demo-app 8080:8080 &
#          sleep 5
#          curl -f http://localhost:8080/health || exit 1
